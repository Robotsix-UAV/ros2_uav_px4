<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="uav__cpp__ros2__conversions_8hpp" kind="file" language="C++">
    <compoundname>uav_cpp_ros2_conversions.hpp</compoundname>
    <includes local="no">uav_cpp/module_io/module_io.hpp</includes>
    <includes local="no">uav_cpp/module_io/fcu_inputs.hpp</includes>
    <includes local="no">ros2_uav_interfaces/msg/pose_heading.hpp</includes>
    <includes local="no">px4_msgs/msg/vehicle_attitude_setpoint.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>include/ros2_uav_px4/utils/uav_cpp_ros2_conversions.hpp</label>
        <link refid="uav__cpp__ros2__conversions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>px4_msgs/msg/vehicle_attitude_setpoint.hpp</label>
      </node>
      <node id="4">
        <label>ros2_uav_interfaces/msg/pose_heading.hpp</label>
      </node>
      <node id="3">
        <label>uav_cpp/module_io/fcu_inputs.hpp</label>
      </node>
      <node id="2">
        <label>uav_cpp/module_io/module_io.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceuav__ros2">uav_ros2</innernamespace>
    <innernamespace refid="namespaceuav__ros2_1_1utils">uav_ros2::utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2024<sp/>The<sp/>Technology<sp/>Innovation<sp/>Institute<sp/>(TII)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uav_cpp/module_io/module_io.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uav_cpp/module_io/fcu_inputs.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros2_uav_interfaces/msg/pose_heading.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;px4_msgs/msg/vehicle_attitude_setpoint.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceuav__ros2_1_1utils" kindref="compound">uav_ros2::utils</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="namespaceuav__ros2_1_1utils_1add5097611370add723120f1fc5a15269" refkind="member"><highlight class="normal">uav_cpp::pipelines::PoseHeading<sp/><ref refid="namespaceuav__ros2_1_1utils_1add5097611370add723120f1fc5a15269" kindref="member">convertFromRosMsg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros2_uav_interfaces::msg::PoseHeading<sp/>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>uav_cpp::pipelines::PoseHeading<sp/>setpoint;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>setpoint.timestamp<sp/>=</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds{msg.header.stamp.sec<sp/>*<sp/>1000000000<sp/>+<sp/>msg.header.stamp.nanosec};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>setpoint.frame_id<sp/>=<sp/>msg.header.frame_id;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>setpoint.position<sp/>=<sp/>tf2::Vector3(msg.position.x,<sp/>msg.position.y,<sp/>msg.position.z);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>setpoint.velocity<sp/>=<sp/>tf2::Vector3(msg.velocity.x,<sp/>msg.velocity.y,<sp/>msg.velocity.z);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>setpoint.heading<sp/>=<sp/>msg.heading;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setpoint;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">uav_cpp::pipelines::AttitudeThrust<sp/>convertFromPx4Msg(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>px4_msgs::msg::VehicleAttitudeSetpoint<sp/>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>uav_cpp::pipelines::AttitudeThrust<sp/>att_thrust;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>att_thrust.timestamp<sp/>=</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::microseconds{msg.timestamp};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>att_thrust.orientation<sp/>=<sp/>tf2::Quaternion(msg.q_d[1],<sp/>-msg.q_d[2],<sp/>-msg.q_d[3],<sp/>msg.q_d[0]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>att_thrust.thrust<sp/>=<sp/>-msg.thrust_body[2];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>att_thrust;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uav_ros2::utils</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/ros2_uav_px4/utils/uav_cpp_ros2_conversions.hpp"/>
  </compounddef>
</doxygen>
