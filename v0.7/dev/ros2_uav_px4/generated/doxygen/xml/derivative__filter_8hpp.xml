<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="derivative__filter_8hpp" kind="file" language="C++">
    <compoundname>derivative_filter.hpp</compoundname>
    <includes local="no">tf2/LinearMath/Vector3.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includedby refid="attitude__thrust__matcher_8hpp" local="yes">include/ros2_uav_px4/model_identification/attitude_thrust_matcher.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/ros2_uav_px4/utils/derivative_filter.hpp</label>
        <link refid="derivative__filter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>tf2/LinearMath/Vector3.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/ros2_uav_px4/model_identification/attitude_thrust_matcher.hpp</label>
        <link refid="attitude__thrust__matcher_8hpp_source"/>
      </node>
      <node id="1">
        <label>include/ros2_uav_px4/utils/derivative_filter.hpp</label>
        <link refid="derivative__filter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classuav__ros2_1_1utils_1_1ButterworthFilter" prot="public">uav_ros2::utils::ButterworthFilter</innerclass>
    <innerclass refid="classuav__ros2_1_1utils_1_1DerivativeFilter" prot="public">uav_ros2::utils::DerivativeFilter</innerclass>
    <innerclass refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D" prot="public">uav_ros2::utils::DerivativeFilter3D</innerclass>
    <innernamespace refid="namespaceuav__ros2">uav_ros2</innernamespace>
    <innernamespace refid="namespaceuav__ros2_1_1utils">uav_ros2::utils</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2024<sp/>The<sp/>Technology<sp/>Innovation<sp/>Institute<sp/>(TII)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf2/LinearMath/Vector3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceuav__ros2_1_1utils" kindref="compound">uav_ros2::utils</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="classuav__ros2_1_1utils_1_1ButterworthFilter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter" kindref="compound">ButterworthFilter</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1a59d03b3053292552878e0c8c4aef4f5d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1a59d03b3053292552878e0c8c4aef4f5d" kindref="member">ButterworthFilter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutoff_frequency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampling_frequency)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>:<sp/>cutoff_(cutoff_frequency),<sp/>fs_(sampling_frequency)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>computeCoefficients();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1a54b18a483449bcca6c8f6b2825f47ec5" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1a54b18a483449bcca6c8f6b2825f47ec5" kindref="member">filtfilt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>input)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>filtered<sp/>=<sp/><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1afe7c19fecc39baf413f6fe09374871b9" kindref="member">filter</ref>(input);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::reverse(filtered.begin(),<sp/>filtered.end());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>filtered<sp/>=<sp/><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1afe7c19fecc39baf413f6fe09374871b9" kindref="member">filter</ref>(filtered);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::reverse(filtered.begin(),<sp/>filtered.end());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filtered;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1afe7c19fecc39baf413f6fe09374871b9" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1afe7c19fecc39baf413f6fe09374871b9" kindref="member">filter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>input)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>output(input.size(),<sp/>0.0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>a0<sp/>*<sp/>input[i];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>+=<sp/>a1<sp/>*<sp/>input[i<sp/>-<sp/>1]<sp/>-<sp/>b1<sp/>*<sp/>output[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[i]<sp/>+=<sp/>a2<sp/>*<sp/>input[i<sp/>-<sp/>2]<sp/>-<sp/>b2<sp/>*<sp/>output[i<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutoff_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Cutoff<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fs_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Sampling<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0,<sp/>a1,<sp/>a2,<sp/>b1,<sp/>b2;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Filter<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeCoefficients()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wc<sp/>=<sp/>tan(M_PI<sp/>*<sp/>cutoff_<sp/>/<sp/>fs_);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k1<sp/>=<sp/>sqrt(2.0)<sp/>*<sp/>wc;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k2<sp/>=<sp/>wc<sp/>*<sp/>wc;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm<sp/>=<sp/>1<sp/>/<sp/>(1<sp/>+<sp/>k1<sp/>+<sp/>k2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>a0<sp/>=<sp/>k2<sp/>*<sp/>norm;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>2<sp/>*<sp/>a0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>a0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>b1<sp/>=<sp/>2<sp/>*<sp/>(k2<sp/>-<sp/>1)<sp/>*<sp/>norm;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>b2<sp/>=<sp/>(1<sp/>-<sp/>k1<sp/>+<sp/>k2)<sp/>*<sp/>norm;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classuav__ros2_1_1utils_1_1DerivativeFilter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter" kindref="compound">DerivativeFilter</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117" refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ab7eb4d62ea2a34104272b2180a45fae2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ab7eb4d62ea2a34104272b2180a45fae2" kindref="member">DerivativeFilter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutoff_frequency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampling_frequency)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>:<sp/>filter_(cutoff_frequency,<sp/>sampling_frequency),<sp/>fs_(sampling_frequency)<sp/>{}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ae721839f157305920e88bb73b1e7f3a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ae721839f157305920e88bb73b1e7f3a2" kindref="member">addData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.push_back(value);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1af07f8bfac510099c09d35af9b86a1f88" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1af07f8bfac510099c09d35af9b86a1f88" kindref="member">computeDerivative</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.size()<sp/>&lt;<sp/>3)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>derivatives(data_.size(),<sp/>0.0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>1.0<sp/>/<sp/>fs_;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>data_.size()<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>derivatives[i]<sp/>=<sp/>(data_[i<sp/>+<sp/>1]<sp/>-<sp/>data_[i<sp/>-<sp/>1])<sp/>/<sp/>(2<sp/>*<sp/>dt);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derivatives;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>derivatives<sp/>=<sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1af07f8bfac510099c09d35af9b86a1f88" kindref="member">computeDerivative</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(derivatives.empty())<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filter_.<ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1a54b18a483449bcca6c8f6b2825f47ec5" kindref="member">filtfilt</ref>(derivatives);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1a74634f34d390f523b578a5b6a1295713" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1a74634f34d390f523b578a5b6a1295713" kindref="member">process</ref>(std::vector&lt;double&gt;<sp/>&amp;<sp/>derivative,<sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>derivative_filtered)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>derivative<sp/>=<sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1af07f8bfac510099c09d35af9b86a1f88" kindref="member">computeDerivative</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(derivative.empty())<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>derivative_filtered<sp/>=<sp/>filter_.<ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter_1a54b18a483449bcca6c8f6b2825f47ec5" kindref="member">filtfilt</ref>(derivative);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1ButterworthFilter" kindref="compound">ButterworthFilter</ref><sp/>filter_;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Butterworth<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fs_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Sampling<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>data_;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D" kindref="compound">DerivativeFilter3D</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189" refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1a0b1f8cba1d477af9e1f4cb776f666c5b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1a0b1f8cba1d477af9e1f4cb776f666c5b" kindref="member">DerivativeFilter3D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutoff_frequency,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sampling_frequency)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>:<sp/>filter_x_(cutoff_frequency,<sp/>sampling_frequency),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_y_(cutoff_frequency,<sp/>sampling_frequency),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_z_(cutoff_frequency,<sp/>sampling_frequency),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>fs_(sampling_frequency)<sp/>{}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1aa6370180c60ff52aa362a23cc5661f7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1aa6370180c60ff52aa362a23cc5661f7e" kindref="member">addData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tf2::Vector3<sp/>&amp;<sp/>value)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_x_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ae721839f157305920e88bb73b1e7f3a2" kindref="member">addData</ref>(value.x());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_y_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ae721839f157305920e88bb73b1e7f3a2" kindref="member">addData</ref>(value.y());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_z_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ae721839f157305920e88bb73b1e7f3a2" kindref="member">addData</ref>(value.z());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1ac7e2254b5b7e9338ebd648c691c0ad30" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;tf2::Vector3&gt;<sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1ac7e2254b5b7e9338ebd648c691c0ad30" kindref="member">process</ref>()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>filter_x_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>filter_y_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>filter_z_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.empty()<sp/>||<sp/>y.empty()<sp/>||<sp/>z.empty())<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;tf2::Vector3&gt;<sp/>derivatives;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>derivatives.emplace_back(x[i],<sp/>y[i],<sp/>z[i]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>derivatives;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1acdfa8e5048a1a85f5d4e12f4120bc6e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter3D_1acdfa8e5048a1a85f5d4e12f4120bc6e6" kindref="member">process</ref>(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;tf2::Vector3&gt;<sp/>&amp;<sp/>derivative,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;tf2::Vector3&gt;<sp/>&amp;<sp/>derivative_filtered)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>x,<sp/>y,<sp/>z,<sp/>xf,<sp/>yf,<sp/>zf;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_x_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>(x,<sp/>xf);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_y_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>(y,<sp/>yf);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>filter_z_.<ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter_1ac658dc137ecb4db7c04d44085a0cc561" kindref="member">process</ref>(z,<sp/>zf);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.empty()<sp/>||<sp/>y.empty()<sp/>||<sp/>z.empty()<sp/>||<sp/>xf.empty()<sp/>||<sp/>yf.empty()<sp/>||<sp/>zf.empty())<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>derivative.clear();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>derivative.emplace_back(x[i],<sp/>y[i],<sp/>z[i]);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>derivative_filtered.clear();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>xf.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>derivative_filtered.emplace_back(xf[i],<sp/>yf[i],<sp/>zf[i]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter" kindref="compound">DerivativeFilter</ref><sp/>filter_x_;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Derivative<sp/>filter<sp/>for<sp/>the<sp/>x-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter" kindref="compound">DerivativeFilter</ref><sp/>filter_y_;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Derivative<sp/>filter<sp/>for<sp/>the<sp/>y-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="classuav__ros2_1_1utils_1_1DerivativeFilter" kindref="compound">DerivativeFilter</ref><sp/>filter_z_;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Derivative<sp/>filter<sp/>for<sp/>the<sp/>z-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fs_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Sampling<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uav_ros2::utils</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/ros2_uav_px4/utils/derivative_filter.hpp"/>
  </compounddef>
</doxygen>
