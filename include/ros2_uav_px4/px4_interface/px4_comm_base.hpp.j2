// Copyright 2024 The Technology Innovation Institute (TII)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @author Damien SIX (damien@robotsix.net)
 */

#pragma once

#include <rclcpp/rclcpp.hpp>
{% for topic in topics %}
#include <{{ topic.header }}>
{%- endfor %}

/** Base class for communication with a PX4 FCU.
 * Generated automatically from the dd_topics.yaml file.
 */
class Px4CommBase
{
public:
  /**
   * Constructor
   *
   * @param node A pointer to the ROS2 node.
   */
  explicit Px4CommBase(rclcpp::Node * node)
  : node_(node)
  {
    // Setting qos
    auto qos = rclcpp::QoS(1);
    qos.keep_last(1);
    qos.best_effort();
    qos.transient_local();

    {% for pub in publishers %}
    {{ pub.topic|replace('fmu/in/', '') }}_pub = node_->create_publisher<{{ pub.type }}>(
      "{{ pub.topic }}", qos);
    {%- endfor %}

    {% for sub in subscribers %}
    {{ sub.topic|replace('fmu/out/', '') }}_sub = node_->create_subscription<{{ sub.type }}>(
      "{{ sub.topic }}", qos, [this](const {{ sub.type }}::SharedPtr msg){ {{ sub.callback }}(msg);});
    {%- endfor %}
  }

protected:
  rclcpp::Node * node_;  /**< The ROS2 node */
  {% for sub in subscribers %}
  rclcpp::Subscription<{{ sub.type }}>::SharedPtr
  {{ sub.topic|replace('fmu/out/', '') }}_sub;
  /**< Subscriber for {{ sub.type }} */
  /**
   * {{ sub.type }} callback
   * @param msg Message from PX4
   */
  virtual void {{ sub.callback }}([[maybe_unused]] const {{ sub.type }}::SharedPtr msg ){};
  {%- endfor %}

  {% for pub in publishers %}
  rclcpp::Publisher<{{ pub.type }}>::SharedPtr
  {{ pub.topic|replace('fmu/in/', '') }}_pub;
  /**< Publisher for {{ pub.type }} */
  {%- endfor -%}
};