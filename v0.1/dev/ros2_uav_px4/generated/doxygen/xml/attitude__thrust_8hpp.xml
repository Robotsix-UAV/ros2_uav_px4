<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="attitude__thrust_8hpp" kind="file" language="C++">
    <compoundname>attitude_thrust.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">uav_cpp/modes/mode.hpp</includes>
    <includes local="no">px4_ros2/control/setpoint_types/experimental/attitude.hpp</includes>
    <includes local="no">px4_ros2/odometry/local_position.hpp</includes>
    <includes local="no">px4_ros2/odometry/attitude.hpp</includes>
    <includes local="no">px4_ros2/odometry/angular_velocity.hpp</includes>
    <includes refid="mode__interface_8hpp" local="yes">ros2_uav_px4/mode_interface/mode_interface.hpp</includes>
    <includes refid="attitude__thrust__impl_8hpp" local="yes">ros2_uav_px4/modes/attitude_thrust_impl.hpp</includes>
    <includedby refid="position_8hpp" local="yes">include/ros2_uav_px4/modes/position.hpp</includedby>
    <includedby refid="spin_8hpp" local="yes">include/ros2_uav_px4/modes/spin.hpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>uav_cpp/parameters/param_container.hpp</label>
      </node>
      <node id="10">
        <label>px4_ros2/components/mode.hpp</label>
      </node>
      <node id="5">
        <label>px4_ros2/odometry/local_position.hpp</label>
      </node>
      <node id="13">
        <label>Eigen/Geometry</label>
      </node>
      <node id="11">
        <label>ros2_uav_px4/modes/attitude_thrust_impl.hpp</label>
        <link refid="attitude__thrust__impl_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>px4_ros2/odometry/attitude.hpp</label>
      </node>
      <node id="14">
        <label>tf2/LinearMath/Vector3.h</label>
      </node>
      <node id="1">
        <label>include/ros2_uav_px4/modes/attitude_thrust.hpp</label>
        <link refid="attitude__thrust_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ros2_uav_px4/utils/tf2_eigen.hpp</label>
        <link refid="tf2__eigen_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ros2_uav_px4/mode_interface/mode_interface.hpp</label>
        <link refid="mode__interface_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tf2/LinearMath/Quaternion.h</label>
      </node>
      <node id="3">
        <label>uav_cpp/modes/mode.hpp</label>
      </node>
      <node id="4">
        <label>px4_ros2/control/setpoint_types/experimental/attitude.hpp</label>
      </node>
      <node id="7">
        <label>px4_ros2/odometry/angular_velocity.hpp</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/ros2_uav_px4/modes/attitude_thrust.hpp</label>
        <link refid="attitude__thrust_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/ros2_uav_px4/modes/spin.hpp</label>
        <link refid="spin_8hpp_source"/>
      </node>
      <node id="2">
        <label>include/ros2_uav_px4/modes/position.hpp</label>
        <link refid="position_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classros2__uav_1_1modes_1_1AttitudeThrustMode" prot="public">ros2_uav::modes::AttitudeThrustMode</innerclass>
    <innernamespace refid="namespaceros2__uav">ros2_uav</innernamespace>
    <innernamespace refid="namespaceros2__uav_1_1modes">ros2_uav::modes</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2024<sp/>Damien<sp/>SIX<sp/>(damien@robotsix.net)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uav_cpp/modes/mode.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;px4_ros2/control/setpoint_types/experimental/attitude.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;px4_ros2/odometry/local_position.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;px4_ros2/odometry/attitude.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;px4_ros2/odometry/angular_velocity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ros2_uav_px4/mode_interface/mode_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ros2_uav::modes</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uav_cpp::modes::Mode;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uav_cpp::types::AttitudeThrust;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uav_cpp::parameters::ParamContainer;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uav_cpp::parameters::ParameterMap;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModeT&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">concept<sp/>DerivedFromAttitudeThrustMode<sp/>=<sp/>requires<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::is_base_of_v&lt;Mode&lt;typename<sp/>ModeT::TrackerType,<sp/>typename<sp/>ModeT::ControllerType&gt;,<sp/>ModeT&gt;;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::is_same_v&lt;typename<sp/>ModeT::ControllerType::ControlInputsType,<sp/>AttitudeThrust&gt;;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;DerivedFromAttitudeThrustMode<sp/>ModeT&gt;</highlight></codeline>
<codeline lineno="47" refid="classros2__uav_1_1modes_1_1AttitudeThrustMode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classros2__uav_1_1modes_1_1AttitudeThrustMode" kindref="compound">AttitudeThrustMode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classros2__uav_1_1modes_1_1ModeInterface" kindref="compound">ModeInterface</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classros2__uav_1_1modes_1_1AttitudeThrustMode_1aed228c48e33e8302942ea1dbfd1115a7" kindref="member">AttitudeThrustMode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ModeBase::Settings<sp/>&amp;<sp/>mode_settings,<sp/>rclcpp::Node<sp/>&amp;<sp/>node);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(robotsix):<sp/>The<sp/>following<sp/>two<sp/>members<sp/>should<sp/>be<sp/>in<sp/>a<sp/>base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Probably<sp/>we<sp/>should<sp/>upgrade<sp/>mode_interface<sp/>to<sp/>also<sp/>be<sp/>a<sp/>template<sp/>Derived<sp/>from<sp/>Mode.</highlight></codeline>
<codeline lineno="65" refid="classros2__uav_1_1modes_1_1AttitudeThrustMode_1ab58ade10b89052e9b92a2b7622909a78" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classros2__uav_1_1modes_1_1AttitudeThrustMode_1ab58ade10b89052e9b92a2b7622909a78" kindref="member">setSetpoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ModeT::TrackerType::SetPointType<sp/>&amp;<sp/>setpoint)<sp/>{mode_.setSetpoint(setpoint);}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classros2__uav_1_1modes_1_1AttitudeThrustMode_1ace778bebbd6ffb26217129a4d1b1cef4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classros2__uav_1_1modes_1_1AttitudeThrustMode_1ace778bebbd6ffb26217129a4d1b1cef4" kindref="member">setTfBuffer</ref>(std::shared_ptr&lt;tf2_ros::Buffer&gt;<sp/>tf_buffer)<sp/>{mode_.setTfBuffer(tf_buffer);}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>ModeT<sp/>mode_;<sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ParameterMap::SharedPtr<sp/>parameters_;<sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>rclcpp::Time<sp/>time_init_;<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;px4_ros2::AttitudeSetpointType&gt;<sp/>attitude_setpoint_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;px4_ros2::OdometryLocalPosition&gt;<sp/>vehicle_local_position_;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;px4_ros2::OdometryAngularVelocity&gt;<sp/>vehicle_angular_velocity_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;px4_ros2::OdometryAttitude&gt;<sp/>vehicle_attitude_;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onActivate()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{odometryUpdate();<sp/>mode_.reset();}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onDeactivate()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>odometryUpdate();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateSetpoint([[maybe_unused]]<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ros2_uav::modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ros2_uav_px4/modes/attitude_thrust_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/ros2_uav_px4/modes/attitude_thrust.hpp"/>
  </compounddef>
</doxygen>
